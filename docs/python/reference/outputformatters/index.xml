<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PLANit â€“ Output Formatters</title>
    <link>https://pages.github.sydney.edu.au/PLANit/PLANitManual/docs/python/reference/outputformatters/</link>
    <description>Recent content in Output Formatters on PLANit</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://pages.github.sydney.edu.au/PLANit/PLANitManual/docs/python/reference/outputformatters/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Memory Output Formatter</title>
      <link>https://pages.github.sydney.edu.au/PLANit/PLANitManual/docs/python/reference/outputformatters/memory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pages.github.sydney.edu.au/PLANit/PLANitManual/docs/python/reference/outputformatters/memory/</guid>
      <description>
        
        
        &lt;h5 id=&#34;description&#34;&gt;Description&lt;/h5&gt;
&lt;p&gt;Results of the traffic assignment run are made available in-memory when this output formatter is activated. Various options on this formatter allow you to access the results by for example; mode, time period, iteration, etc.&lt;/p&gt;
&lt;h4 id=&#34;use&#34;&gt;Use&lt;/h4&gt;
&lt;p&gt;Assuming &lt;code&gt;instance = PLANit()&lt;/code&gt; is available, and the memory output fromatter is activated via &lt;code&gt;instance.activate( OutputFormatter.MEMORY)&lt;/code&gt;. After this, the memory output formatter instance can be accessed via &lt;code&gt;instance.memory&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;type&#34;&gt;Type&lt;/h4&gt;
&lt;p&gt;Class &lt;code&gt;MemoryOutputFormatterWrapper&lt;/code&gt; in &lt;code&gt;Wrappers.py&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;see-also&#34;&gt;See also&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;../../enums/outputformattertype&#34;&gt;OutputFormatter.&amp;lt;enum&amp;gt;&lt;/a&gt; for all available output formatters&lt;br&gt;
&lt;a href=&#34;../../planit+/planit_activate+&#34;&gt;PLANit.activate(+)&lt;/a&gt; to see how to activate an output formatter
&lt;a href=&#34;../../planit+/planit_deactivate+&#34;&gt;PLANit.deactivate(+)&lt;/a&gt; to see how to de-activate an output formatter&lt;br&gt;
&lt;a href=&#34;../planit+/planit_memory&#34;&gt;PLANit.memory&lt;/a&gt; on how to access the memory output formatter&lt;/p&gt;
&lt;h4 id=&#34;methods&#34;&gt;Methods&lt;/h4&gt;
&lt;p&gt;Memory output formatter exposes the following methods&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h4 id=&#34;properties&#34;&gt;Properties&lt;/h4&gt;
&lt;p&gt;Memory output formatter exposes the following properties&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Availability&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h4 id=&#34;example-1&#34;&gt;Example 1&lt;/h4&gt;
&lt;p&gt;TODO&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
