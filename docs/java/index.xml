<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PLANit â€“ PLANit-Java manual</title>
    <link>https://planitmanual.github.io/version/0_2_0/docs/java/</link>
    <description>Recent content in PLANit-Java manual on PLANit</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://planitmanual.github.io/version/0_2_0/docs/java/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Getting Started</title>
      <link>https://planitmanual.github.io/version/0_2_0/docs/java/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://planitmanual.github.io/version/0_2_0/docs/java/getting-started/</guid>
      <description>
        
        
        &lt;p&gt;The Java API of PLANit is very versatile and highly configurable. It allows you to setup a project which in turn can run one or more traffic assignments based on different networks, zonings, and demands. Each traffic assignment can be configured separately, including the outputs it should generate.&lt;/p&gt;
&lt;p&gt;In this getting started we will take you through the process of setting up an input file and constructing your first PLANit assignment run.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Make sure you have access to the PLANit-Java sources and/or compiled classes via the &lt;code&gt;PLANitXXXX.jar&lt;/code&gt;, as per the &lt;a href=&#34;../../../installation/planit-java&#34;&gt;Installation guide&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;my-first-application&#34;&gt;My first Application!&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s create our very first PLANit-Java traffic assignment application.&lt;/p&gt;
&lt;h3 id=&#34;creating-inputs&#34;&gt;Creating inputs&lt;/h3&gt;
&lt;p&gt;PLANit requires a network, demands, and zoning structure as inputs to be able to construct a valid transport network. Let&amp;rsquo;s provide all three in the same XML file. Our XML file is based on the &lt;a href=&#34;../../inputoutput/input/planitdefault&#34;&gt;Default PLANit Data Format&lt;/a&gt;. Copy the contents of the XML snippet below and save them somewhere on disk, e.g. &lt;code&gt;&amp;quot;c:\Users\Public\planit_test\&amp;quot;&lt;/code&gt;, as - for example - &lt;code&gt;&amp;quot;planit_input.xml&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-XML&#34; data-lang=&#34;XML&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;PLANit&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;xmlns:gml=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://www.opengis.net/gml&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#c4a000&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!-- Demand component --&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;macroscopicdemand&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;demandconfiguration&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;timeperiods&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;timeperiod&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
					&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;duration&amp;gt;&lt;/span&gt;3600&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/duration&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/timeperiod&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/timeperiods&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/demandconfiguration&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;oddemands&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;odcellbycellmatrix&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;timeperiodref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;o&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
					&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;d&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;1000&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/d&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/o&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/odcellbycellmatrix&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/oddemands&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/macroscopicdemand&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!-- Physical network component --&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;macroscopicnetwork&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;infrastructurelayers&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;layer&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;road&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;nodes&amp;gt;&lt;/span&gt;
					&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;node&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
					&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;node&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/nodes&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;links&amp;gt;&lt;/span&gt;
					&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;link&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;nodearef=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;nodebref=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
						&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;linksegment&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;dir=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;a_b&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
						&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;linksegment&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;dir=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;b_a&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
						&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;length&amp;gt;&lt;/span&gt;10&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/length&amp;gt;&lt;/span&gt;
					&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/links&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/layer&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/infrastructurelayers&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/macroscopicnetwork&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!-- zoning structure component --&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;macroscopiczoning&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;zones&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;zone&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;centroid&amp;gt;&lt;/span&gt;
					&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Zone 1 centroid&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/centroid&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;connectoids&amp;gt;&lt;/span&gt;
					&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;connectoid&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;noderef=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/connectoids&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/zone&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;zone&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;centroid&amp;gt;&lt;/span&gt;
					&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Zone 2 centroid&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/centroid&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;connectoids&amp;gt;&lt;/span&gt;
					&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;connectoid&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;noderef=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/connectoids&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/zone&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/zones&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/macroscopiczoning&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/PLANit&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;demands&#34;&gt;Demands&lt;/h3&gt;
&lt;p&gt;The travel demand is provided in matrix format in veh/h. In this case for the default mode (we did not specify a mode explicitly) and set to a value of 1000:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Origin/Destination&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;1&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;-&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;-&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Also note that the inputs define a single time period that has a duration of exactly 1 hour, i.e., 3600 seconds.&lt;/p&gt;
&lt;h3 id=&#34;network-and-zoning-structure&#34;&gt;Network and zoning structure&lt;/h3&gt;
&lt;p&gt;As you can see, the demands, zoning, and network all have their own section in the XML. Here, the network comprises:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 link (segment)&lt;/li&gt;
&lt;li&gt;2 nodes (at upstream and downstream of link),&lt;/li&gt;
&lt;li&gt;2 zones,
&lt;ul&gt;
&lt;li&gt;2 centroids, one per zone,&lt;/li&gt;
&lt;li&gt;two connectoids, one per zone&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each zone represents a geographical area. It has a centroid from which travel demand can depart/arrive. To access the physical road network, each zone has one or more connectoids, i.e., nodes marked as eligible points for ingress/egress. PLANit will construct virtual links, connecting each connectoid node to the centroid. In this case, both nodes are marked as connectoids for one of the two zones.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/simplenetwork.png&#34; alt=&#34;Simple network&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;planit-model-configuration&#34;&gt;PLANit model configuration&lt;/h3&gt;
&lt;p&gt;Let us now configure our traffic assignment run using the above inputs.&lt;/p&gt;
&lt;p&gt;Create a new executable Java file in your favourite IDE, e.g. Eclipse, or something else and name it &lt;code&gt;PLANitMain.java&lt;/code&gt;. if you are unfamiliar with programming in Java, just copy the below snippet in this file. It will create a class called &lt;code&gt;PLANitMain&lt;/code&gt; and when you run it it will execute the &lt;code&gt;main(...)&lt;/code&gt; method&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class PlanItMain {

	public static void main(final String[] args) {
	}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now Copy the below Java snippet into the &lt;code&gt;main&lt;/code&gt; method (in between the two accolades and save). We&amp;rsquo;ll go through the snippet line by line to explain what is going on&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// PROJECT INSTANCE
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PlanItSimpleProject&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;project&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PlanItSimpleProject&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;c:\\Users\\Public\\planit_test\\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
           
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ASSIGNMENT INSTANCE
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;TraditionalStaticAssignmentConfigurator&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assignment&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 
        &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TraditionalStaticAssignmentConfigurator&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;createAndRegisterTrafficAssignment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TrafficAssignment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;TRADITIONAL_STATIC_ASSIGNMENT&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
      
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// COMPONENTS
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;BPRConfigurator&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;bprCost&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BPRConfigurator&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assignment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;createAndRegisterPhysicalCost&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PhysicalCost&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;BPR&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;assignment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;createAndRegisterVirtualCost&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VirtualCost&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;FIXED&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;assignment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;createAndRegisterSmoothing&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Smoothing&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;MSA&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
      
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// CONFIGURE COST COMPONENT
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// BPR 
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;double&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;alpha&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;double&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;beta&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#000&#34;&gt;bprCost&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;setDefaultParameters&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;alpha&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;beta&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
      
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// CONFIGURE OUTPUT
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;assignment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;getOutputConfiguration&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;setPersistOnlyFinalIteration&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
      
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// EXECUTE ASSIGNMENT
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#000&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;executeAllTrafficAssignments&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// do something
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Make sure you imported all the suggested classes. If you are not using an IDE, you will have to look up the correct imports from the PLANitxxxx.jar or the JavaDoc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ok, let&amp;rsquo;s see what we just did. First, an instance of a &lt;code&gt;PLANitSimpleProject&lt;/code&gt; is created, named &lt;code&gt;project&lt;/code&gt;, via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PlanItSimpleProject&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;project&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PlanItSimpleProject&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;c:\\Users\\Public\\planit_test\\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;There are more advanced project implementations available, e.g. &lt;code&gt;PlanItProject&lt;/code&gt; or &lt;code&gt;CustomPlanItProject&lt;/code&gt;, that allow you to change more things but come at the cost of a more complex configuration, see the &lt;a href=&#34;../examples/project_examples&#34;&gt;project example section&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;You can give the instance any name you want, it is not tied to &lt;code&gt;project&lt;/code&gt;. It could also be &lt;code&gt;i_love_assignment&lt;/code&gt;, or &lt;code&gt;p&lt;/code&gt;, or &lt;code&gt;what_now&lt;/code&gt;. Do note that a descriptive name is usually the best choice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;code&gt;project&lt;/code&gt; instance takes one argument here, the project path. PLANit will attempt to parse all the inputs from this directory. So make sure that the XML file with the inputs is available in this directory. If you saved it somewhere else, change the path that you pass in to the project to this directory.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;project&lt;/code&gt; instance allows you access to the parsed inputs. Further, it is used to create and register traffic assignments on it. So, a project can have a bunch of inputs and traffic assignments. The traffic assignment then uses these inputs to conduct its simulation run. In case of a &lt;code&gt;PlanItSimpleProject&lt;/code&gt;, the project allows only a single assignment on the project and it automatically provides the inputs to this one assignment without the user having to explicitly do this. Neat!&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s move on to the next line. Here we decide what traffic assignment component we are using. Here, we opt for a traditional static traffic assignment model. It is activated by creating and registering it on the project via :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;TraditionalStaticAssignmentConfigurator&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assignment&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 
	&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TraditionalStaticAssignmentConfigurator&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;createAndRegisterTrafficAssignment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TrafficAssignment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;TRADITIONAL_STATIC_ASSIGNMENT&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Like all components that the user can choose, you either provide the full Java class name or - if it is an implementation known to PLANit - a shorthand reference as is used here via &lt;code&gt;TrafficAssignment.TRADITIONAL_STATIC_ASSIGNMENT&lt;/code&gt;. The return type is an implementation of a &lt;code&gt;TrafficAssignmentConfigurator&lt;/code&gt; for the assignment at hand, in this case a &lt;code&gt;TraditionalStaticAssignmentConfigurator&lt;/code&gt;. It allows you to configure the underlying components relevant to the chosen assignment.&lt;/p&gt;
&lt;p&gt;Each traffic assignment comes with a number of default components that will be activated automatically. For the sake of this example, we explicitly activate the defaults (BPR, FIXED, MSA) to show you how you do this manually via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;BPRConfigurator&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;bprCost&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BPRConfigurator&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;assignment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;createAndRegisterPhysicalCost&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;PhysicalCost&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;BPR&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;assignment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;createAndRegisterVirtualCost&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VirtualCost&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;FIXED&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;assignment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;createAndRegisterSmoothing&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Smoothing&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;MSA&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Once you have completed this example, you can try running it again, but now with the above three lines removed. You will see they yield the same result, i.e., these components are activated by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As you can see, each line calls a &lt;code&gt;.createAndRegisterXXX()&lt;/code&gt; method on the &lt;code&gt;assignment&lt;/code&gt; instance. As a result these choices are attached to this particular assignment only.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Physical cost&lt;/strong&gt;&lt;br&gt;
Here, we choose to set the physical cost, which represents the cost structure imposed on the physical road network. It is set to &lt;code&gt;PhysicalCost.BPR&lt;/code&gt; resulting in the activation of a &lt;code&gt;BPRLinkTravelTimeCost&lt;/code&gt; implementation. Each of these methods returns the created instance so you can configure the component directly. alternatively you can collect it afterwards via a getter, e.g. &lt;code&gt;assignment.getXXXX()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Virtual cost&lt;/strong&gt;&lt;br&gt;
In PLANit, you separately configure the costs for the virtual part of the network that connects the travel demand from the zones to the physical network (via virtual links between connectoids and centroids). Here, we choose that cost to be fixed via &lt;code&gt;VirtualCost.FIXED&lt;/code&gt;. Since we do not change its configuration, it adopts the default fixed cost value. We refer the reader to the JavaDoc for specifics on the defaults for each of the components.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Smoothing&lt;/strong&gt;&lt;br&gt;
Traditional static assignment is a so-called within-day equilibrium method based on Wardrop&amp;rsquo;s first principle, meaning that it seeks to finds a solution where all travellers find their optimal path having the smallest cost given the choices of all other travellers (who do the same). This is achieved by adopting an iterative procedure. During this iteration process, so called smoothing is applied. This ensures that changes between iterations result in a smooth transition towards the equilibrium solution. there exist many ways to apply smoothing. Here, simple MSA smoothing is used because of its simplicity and computational attractiveness. It is activated via &lt;code&gt;Smoothing.MSA&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Configuration of components&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let us now look at how to configure options on one of our components; the BPR cost function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;double&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;alpha&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;double&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;beta&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;bprCost&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;setDefaultParameters&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;alpha&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;beta&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can configure the BPR specific options by utilising the &lt;code&gt;BPRLinkTravelTimeCost bprCost&lt;/code&gt; returned by the assignment when we registered it.&lt;/p&gt;
&lt;p&gt;The BPR function has two parameters (alpha and beta) that you can configure in various ways. Here, we will just change the defaults for all link segments, modes, and link segment types simultaneously. We do so &lt;code&gt;.setDefaultParameters(alpha,beta)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Before we start the simulation run, we also explicitly make sure that we store results of all iterations, instead of only the final iteration (which is the default). 
To make this happen we call&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;assignment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;getOutputConfiguration&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;setPersistOnlyFinalIteration&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Everything related to general choices regarding outputs is configured via the &lt;code&gt;OutputConfiguration&lt;/code&gt; instance obtained via &lt;code&gt;assignment.getOutputConfiguration()&lt;/code&gt;. Dedicated configuration for link, od, and path outputs also exist (when activated). Examples can be found under &lt;a href=&#34;../examples/output_examples&#34;&gt;Output Examples&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;running-the-application&#34;&gt;Running the application&lt;/h3&gt;
&lt;p&gt;Before running the application make sure it ends with the line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;project&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;executeAllTrafficAssignments&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will trigger the simulation to start. Make sure all configuration is conducted before calling this method, because otherwise it has no impact on the simulation. Note that in project types other than &lt;code&gt;PlanItSimpleProject&lt;/code&gt; multiple assignments can be configured to be run sequentially. This is why the method is named &lt;code&gt;executeAllTrafficAssignments&lt;/code&gt; even though in this basic example we only configured a single assignment.&lt;/p&gt;
&lt;p&gt;Now run the main method from you IDE, or otherwise compile and run it from the command line (we assume you know how to do this, otherwise, Google is your friend!).&lt;/p&gt;
&lt;p&gt;If all went well the application should run and all outputs are persisted in the same directory as where you placed your inputs. Go to the directory where your inputs are located. You should see that PLANit generated two files, an XML file, and a CSV file. The former contains meta-data about the latter. The CSV file contains the actual link based results of your run.&lt;/p&gt;
&lt;h3 id=&#34;result-files&#34;&gt;Result files&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;../../inputoutput/output/planitdefault&#34;&gt;Default Output Formatter&lt;/a&gt; generates meta-data for each run as well as CSV files that contain the actual data. Let&amp;rsquo;s take a quick look.&lt;/p&gt;
&lt;h4 id=&#34;xml-meta-data&#34;&gt;XML meta-data&lt;/h4&gt;
&lt;p&gt;The XML meta-data file you generally only use when you&amp;rsquo;re still unfamiliar with the column information in the CSV, or to get some information about the run when you forgot how it was generated, otherwise you are likely to skip it and only concern yourself with the &lt;a href=&#34;./#csv-results&#34;&gt;CSV results&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Your XML meta-data file contains information about the simulation run, but most importantly provides information on the column information in the CSV. Each column is listed with information on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name, related to the column heading in the CSV&lt;/li&gt;
&lt;li&gt;type, type of the values, e.g., integer, string, double, etc.&lt;/li&gt;
&lt;li&gt;unit, unit of the values, e.g., km, h, m, veh/h, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Below you&amp;rsquo;ll find the XML meta-data for this run (you should have something very similar)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-XML&#34; data-lang=&#34;XML&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; standalone=&amp;#34;yes&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;metadata&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;xsi:noNamespaceSchemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;path_to_xsd&amp;gt;/metadata.xsd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;timestamp&amp;gt;&lt;/span&gt;2020-06-01T15:29:18.480+10:00&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/timestamp&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;X.Y.Z&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;A_DESCRIPTION&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;outputconfiguration&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;assignment&amp;gt;&lt;/span&gt;TraditionalStaticAssignment&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/assignment&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;physicalcost&amp;gt;&lt;/span&gt;BPRLinkTravelTimeCost&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/physicalcost&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;virtualcost&amp;gt;&lt;/span&gt;FixedConnectoidTravelTimeCost&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/virtualcost&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;smoothing&amp;gt;&lt;/span&gt;MSASmoothing&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/smoothing&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;gapfunction&amp;gt;&lt;/span&gt;LinkBasedRelativeDualityGapFunction&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/gapfunction&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;stopcriterion&amp;gt;&lt;/span&gt;StopCriterion&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/stopcriterion&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;timeperiod&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;0&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/timeperiod&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/outputconfiguration&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;simulation&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;iteration&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;nr&amp;gt;&lt;/span&gt;2&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/nr&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;csvdata&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Link&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;LINK_TO_CSV_RESULT_FILE&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/csvdata&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/iteration&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/simulation&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;columns&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Downstream Node XML Id&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;none&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;string&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Link Segment XML Id&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;none&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;string&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Mode XML Id&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;none&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;string&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Time Period XML Id&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;none&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;string&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Time Period Id&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;none&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;integer&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Upstream Node XML Id&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;none&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;string&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Capacity per Lane&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;veh/h&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;double&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Downstream Node Location&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;srs&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;srsname&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Length&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;km&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;double&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Maximum Speed&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;km/h&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;double&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Number of Lanes&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;none&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;integer&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Upstream Node Location&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;srs&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;srsname&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Calculated Speed&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;km/h&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;double&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Cost&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;h&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;double&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Density&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;veh/km&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;double&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Flow&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;units&amp;gt;&lt;/span&gt;veh/h&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/units&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;double&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/columns&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/metadata&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;csv-results&#34;&gt;CSV Results&lt;/h4&gt;
&lt;p&gt;The CSV result file - with default settings - has a heading row with the column names (corresponding to the columns in the XML meta-data file). The other rows contain the result values, separated by a comma. In this very simple example we only have a single result row for the one link. The result should look something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-CSV&#34; data-lang=&#34;CSV&#34;&gt;Downstream Node XML Id,Link Segment XML Id,Mode XML Id,Time Period XML Id,Time Period Id,Upstream Node XML Id,Capacity per Lane,Downstream Node Location,Length,Maximum Speed,Number of Lanes,Upstream Node Location,Calculated Speed,Cost,Flow
2,1,1,0,0,1,1800.0000000,Not Specified,10.0000000,80.0000000,1,Not Specified,75.1948772,0.1329878,180.0000000,1000.0000000
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As you can see, we find that the the flow is indeed 1000 veh/h as stated in our input. The speed is somewhat reduced compared to free flow resulting in a slightly increased travel time (cost)&lt;/p&gt;
&lt;p&gt;Some of these columns you are likely not interested in for most applications. You can add and remove columns very easily. More information on this can be found under the &lt;a href=&#34;../reference/outputconfiguration/link&#34;&gt;Link Configuration&lt;/a&gt; section of the manual.&lt;/p&gt;
&lt;h4 id=&#34;activating-more-output-types&#34;&gt;Activating more output types&lt;/h4&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Examples</title>
      <link>https://planitmanual.github.io/version/0_2_0/docs/java/examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://planitmanual.github.io/version/0_2_0/docs/java/examples/</guid>
      <description>
        
        
        &lt;p&gt;Here we provide you with a number of representative examples.&lt;/p&gt;
&lt;p&gt;In the Java implementation of PLANit, we make a distinction between projects and assignments. A project can hold a number of inputs and assignments. An assignment utilises a subset of the inputs available on the project.&lt;/p&gt;
&lt;p&gt;The examples are split in multiple sections, each with a focus on a particular aspect of the PLANit run:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;project_examples&#34;&gt;Setting up a project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;initial_cost_examples&#34;&gt;Providing initial costs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;ta_examples&#34;&gt;Setting up traffic assignments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;output_examples&#34;&gt;Setting up outputs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;input_examples&#34;&gt;Setting up inputs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each section focuses on the options for its area of focus and relies on the defaults for the other components where possible.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Downloads</title>
      <link>https://planitmanual.github.io/version/0_2_0/docs/java/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://planitmanual.github.io/version/0_2_0/docs/java/download/</guid>
      <description>
        
        
        &lt;p&gt;Below you will find all the compiled sources and source code for this release packaged in a jar file:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;repository&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;version&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;compiled jar&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;source jar&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;package prefix&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;PLANit core&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.2.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANit-0.2.0.jar&#34;&gt;PLANit-0.2.0.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANit-0.2.0-sources.jar&#34;&gt;PLANit-0.2.0-sources.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;org.planit.*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;PLANit utils&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.2.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANit-0.2.0.jar&#34;&gt;PLANitUtils-0.2.0.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANitUtils-0.2.0-sources.jar&#34;&gt;PLANitUtils-0.2.0-sources.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;org.planit.utils.*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;PLANit IO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.2.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANitIO-0.2.0.jar&#34;&gt;PLANitIO-0.2.0.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANitIO-0.2.0-sources.jar&#34;&gt;PLANitIO-0.2.0-sources.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;org.planit.io.*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;PLANit J2Py&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.2.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANitJ2Py-0.2.0.jar&#34;&gt;PLANitJ2Py-0.2.0.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANitJ2Py-0.2.0-sources.jar&#34;&gt;PLANitJ2Py-0.2.0-sources.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;org.planit.python.*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;PLANit XML Generator&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.2.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANitXMLGenerator-0.2.0.jar&#34;&gt;PLANitXMLGenerator-0.2.0.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;n/a (to be generated)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;org.planit.xml.generated&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Experimental/unfinished repositories&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;repository&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;version&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;compiled jar&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;source jar&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;package prefix&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;PLANit TNTP&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.2.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANitTNTP-0.2.0.jar&#34;&gt;PLANitTNTP-0.2.0.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANitTNTP-0.2.0-sources.jar&#34;&gt;PLANitTNTP-0.2.0-sources.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;org.planit.tntp.*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;PLANit OSM&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.2.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANitOSM-0.2.0.jar&#34;&gt;PLANitOSM-0.2.0.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANitOSM-0.2.0-sources.jar&#34;&gt;PLANitOSM-0.2.0-sources.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;org.planit.osm.*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;PLANit MATSIM&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.2.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANitMatsim-0.2.0.jar&#34;&gt;PLANitMatsim-0.2.0.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../../jars/PLANitMatsim-0.2.0-sources.jar&#34;&gt;PLANitMatsim-0.2.0-sources.jar&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;org.planit.matsim.*&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;see-also&#34;&gt;See also&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;../Python&#34;&gt;Python manual&lt;/a&gt; for Python specific documentation of PLANit API&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
